"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[623],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(s,".").concat(m)]||f[m]||c[m]||i;return n?r.createElement(d,l(l({ref:t},u),{},{components:n})):r.createElement(d,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5030:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:3,version:"v1.0.20"},s="VKPR infra start",p={unversionedId:"commands/infra/start",id:"commands/infra/start",isDocsHomePage:!1,title:"VKPR infra start",description:"Description",source:"@site/docs/commands/infra/start.mdx",sourceDirName:"commands/infra",slug:"/commands/infra/start",permalink:"/pt/docs/commands/infra/start",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/commands/infra/start.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,version:"v1.0.20"},sidebar:"tutorialSidebar",previous:{title:"VKPR infra down",permalink:"/pt/docs/commands/infra/down"},next:{title:"VKPR infra stop",permalink:"/pt/docs/commands/infra/stop"}},u=[{value:"Description",id:"description",children:[]},{value:"Commands",id:"commands",children:[{value:"Example Usage",id:"example-usage",children:[]}]},{value:"Argument Reference",id:"argument-reference",children:[{value:"Flags",id:"flags",children:[]},{value:"Values File",id:"values-file",children:[]}]},{value:"See Also",id:"see-also",children:[]}],c={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"vkpr-infra-start"},"VKPR infra start"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Create a configurable k3d cluster to test the applications."),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("p",null,"Interactive inputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr infra start [flags]\n")),(0,i.kt)("p",null,"Non-interactive without setting values or using ",(0,i.kt)("inlineCode",{parentName:"p"},"VKPR Values"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr infra start --default\n")),(0,i.kt)("h3",{id:"example-usage"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="vkpr infra start --default"',title:'"vkpr',infra:!0,start:!0,'--default"':!0},'# vkpr.yaml\n---\ninfra:\n  enabled: true\n  httpPort: "foo"\n  httpsPort: "bar"\n  enableTraefik: false\n  resources:\n    masters: 1\n    workers: 3\n  enableVolume: true\n')),(0,i.kt)("h2",{id:"argument-reference"},"Argument Reference"),(0,i.kt)("h3",{id:"flags"},"Flags"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"  --default=false: Use to automatically fill inputs with default values.\n  --enable_traefik=false: Enable Traefik by default in Cluster.\n  --enable_volume=false: Enable mount of volumes in cluster.\n  --http_port='8000': Specifies the HTTP listening port from the Cluster.\n  --https_port='8001': Specifies the HTTPS listening port from the Cluster.\n  --worker_nodes='1': Specifies the quantity of Worker nodes.\n")),(0,i.kt)("h3",{id:"values-file"},"Values File"),(0,i.kt)("h4",{id:"local"},"Local"),(0,i.kt)("p",null,"The following arguments are supported:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"enabled"))," - (Required unless using the ",(0,i.kt)("a",{parentName:"li",href:"/docs/commands/apply"},"vkpr apply"),") Enable the auto install from the application."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"httpPort"))," - (Required) Define the domain used by the application. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"httpsPort"))," - (Required) Specifies if the services from the application will expose HTTPS ports inside the cluster. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"enableTraefik"))," - (Required) Define which ingress controller will expose the application. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"resources")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"masters"))," - (Optional) Define where the application will be provisioned. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"workers"))," - (Required) Define where the application will be provisioned. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"enableVolume"))," - (Required) Define where the application will be provisioned. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"see-also"},"See Also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/commands/infra/down"},"VKPR infra down")," - Delete the local cluster created.")))}f.isMDXComponent=!0}}]);