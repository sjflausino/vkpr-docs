"use strict";(self.webpackChunkvkpr_docs=self.webpackChunkvkpr_docs||[]).push([[7393],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2155:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:1,version:"v1.0.20"},c="VKPR digitalocean cluster init",s={unversionedId:"commands/digitalocean/cluster/init",id:"commands/digitalocean/cluster/init",isDocsHomePage:!1,title:"VKPR digitalocean cluster init",description:"Description",source:"@site/docs/commands/digitalocean/cluster/init.mdx",sourceDirName:"commands/digitalocean/cluster",slug:"/commands/digitalocean/cluster/init",permalink:"/docs/commands/digitalocean/cluster/init",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/commands/digitalocean/cluster/init.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,version:"v1.0.20"},sidebar:"tutorialSidebar",previous:{title:"VKPR Create Formula",permalink:"/docs/commands/create"},next:{title:"VKPR digitalocean cluster deploy",permalink:"/docs/commands/digitalocean/cluster/deploy"}},u=[{value:"Description",id:"description",children:[]},{value:"Commands",id:"commands",children:[{value:"Example Usage",id:"example-usage",children:[]}]},{value:"Argument Reference",id:"argument-reference",children:[{value:"Flags",id:"flags",children:[]},{value:"Values File",id:"values-file",children:[]},{value:"Setting Provider credentials",id:"setting-provider-credentials",children:[]}]},{value:"See Also",id:"see-also",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"vkpr-digitalocean-cluster-init"},"VKPR digitalocean cluster init"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Fork and setup the ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.com/vkpr/k8s-digitalocean"},"GitOps Repo")," in your Gitlab, using Gitlab Backend to save the Terraform state."),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("p",null,"Interactive inputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr digitalocean cluster init [flags]\n")),(0,i.kt)("p",null,"Non-interactive without setting values or using ",(0,i.kt)("inlineCode",{parentName:"p"},"VKPR Values"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  vkpr digitalocean cluster init --default\n")),(0,i.kt)("h3",{id:"example-usage"},"Example Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="vkpr digitalocean cluster init --default"',title:'"vkpr',digitalocean:!0,cluster:!0,init:!0,'--default"':!0},'# vkpr.yaml\n---\ndigitalocean:\n  cluster:\n    name: "cluster-sample"\n    version: 1.21\n    region: "nyc1"\n    nodes:\n      instaceType: "s-2vcpu-2gb"\n      quantitySize: 3\n')),(0,i.kt)("h2",{id:"argument-reference"},"Argument Reference"),(0,i.kt)("h3",{id:"flags"},"Flags"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"  --default=false: Use to automatically fill inputs with default value provided on config.json\n  --do_cluster_region='nyc1': Specifies the EKS Kubernetes Version.\n  --do_cluster_size='1': Specifies the number of Nodes.\n  --do_k8s_version='1.22': Specifies the EKS Kubernetes Version.\n")),(0,i.kt)("h3",{id:"values-file"},"Values File"),(0,i.kt)("h4",{id:"local"},"Local"),(0,i.kt)("p",null,"The following arguments are supported:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"name"))," - (Required) Specify the name of the cluster in AWS EKS. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"eks-sample"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"version"))," - (Required) Define the Kubernetes version used. Allowed Values: ",(0,i.kt)("inlineCode",{parentName:"li"},"1.22"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"1.21"),". The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1.22"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"region"))," - (Required) Define the Cluster Region. Allowed Values: ",(0,i.kt)("inlineCode",{parentName:"li"},"nyc1"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"nyc2"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"sfo1"),". The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"nyc1"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"nodes")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"instaceType"))," - (Required) Specifies the type of ec2 created to the nodes. Allowed Values: ",(0,i.kt)("inlineCode",{parentName:"li"},"s-2vcpu-2gb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"s-2vcpu-4gb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"s-2vcpu-4gb"),". The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"s-2vcpu-2gb"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#argument-reference"},(0,i.kt)("inlineCode",{parentName:"a"},"quantitySize"))," - (Required) Specifies the quantity of nodes created to the cluster. The default is ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),".")))),(0,i.kt)("h3",{id:"setting-provider-credentials"},"Setting Provider credentials"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"CAUTION: Setting credentials manually will override the credentials already saved in memory")),(0,i.kt)("h4",{id:"digital-ocean"},"Digital Ocean"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'  rit set credential --provider="digitalocean" --fields="token" --values="your-api-token"\n')),(0,i.kt)("h4",{id:"gitlab"},"Gitlab"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'  rit set credential --provider="gitlab" --fields="token,username" --values="your-token,your-username"\n')),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"see-also"},"See Also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/commands/digitalocean/cluster/deploy"},"VKPR digitalocean cluster deploy")," - Execute the pipeline to deploy the EKS Cluster."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/commands/digitalocean/cluster/destroy"},"VKPR digitalocean cluster destroy")," - Execute the pipeline to destroy the EKS Cluster.")))}p.isMDXComponent=!0}}]);